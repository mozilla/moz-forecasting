
####################
# CircleCI configuration reference:
#   https://circleci.com/docs/2.0/configuration-reference
####################
# CircleCI built-in environment variables:
#   https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables
####################

commands:
  uv_setup:
    steps:
      - run:
          name: install uv
          command: curl -LsSf https://astral.sh/uv/0.4.8/install.sh | sh
      - run:
          name: activate_env
          command: echo 'export PATH="$HOME/.cargo/bin/:$PATH"' >> "$BASH_ENV"
      - run:
          name: install dependencies
          command: echo $PATH
      - run:  uv sync --frozen



version: 2.1

orbs:
  gcp-gcr: circleci/gcp-gcr@0.16

parameters:
  deploy:
    type: boolean
    default: false

executors:
  ubuntu-machine-executor:
    machine:
      image: ubuntu-2004:current

jobs:
  pytest:
    docker:
      - image: cimg/python:3.10 # the primary container, where your job's commands are run
    steps:
      - checkout
      - uv_setup
      - run: uv run pytest
  linting:
    docker:
      - image: cimg/python:3.10 # the primary container, where your job's commands are run
    steps:
      - checkout
      - uv_setup
      - run: uvx ruff@0.6.5 check
      - run: uvx ruff@0.6.5 format
  deploy-to-private-gcr:
    executor: ubuntu-machine-executor
    steps:
      - when:
          condition: &deploy
            or:
              - << pipeline.parameters.deploy >>
          steps:
            - run:
                name: set env vars
                command: |
                  echo 'export GOOGLE_PROJECT_ID="moz-fx-mfouterbounds-prod-f98d"' >> "$BASH_ENV"
                  echo "export OIDC_SERVICE_ACCOUNT_EMAIL=circle-ci-image-pusher@moz-fx-mfouterbounds-prod-f98d.iam.gserviceaccount.com" >> "$BASH_ENV"
            - checkout
            - gcp-gcr/gcr-auth:
                use_oidc: true
            - gcp-gcr/build-image: &private-image
                image: moz-forecasting
                tag: ${CIRCLE_TAG:-latest}
            - gcp-gcr/push-image: *private-image
      - unless:
          condition: *deploy
          steps:
              run:
                name: Skip
                command: echo "Skipped due to path filtering"

workflows:
  version: 2.1
  build:
    jobs:
      - pytest
      - linting
      - deploy-to-private-gcr